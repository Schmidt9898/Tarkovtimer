<Window x:Class="tarwatch.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:tarwatch"
        mc:Ignorable="d"
        Title="TarkovTime" Height="130" Width="400" MinWidth="300" MinHeight="120" MouseDown="Window_MouseDown" Background="Black" WindowStyle="None" Icon="exit.bmp" Deactivated="Window_Deactivated" Closing="Window_Closing">
    <Window.Resources>
        <ImageBrush x:Key="zold" ImageSource="/exit2.bmp" Stretch="Uniform"/>
        <ImageBrush x:Key="reseticon" ImageSource="/reset.png" Stretch="Fill"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource zold }"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource reseticon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid>
        <Grid.Background>
            <ImageBrush ImageSource="back.jpg" Stretch="UniformToFill">
                <ImageBrush.RelativeTransform>
                    <TransformGroup>
                        <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                        <SkewTransform CenterY="0.5" CenterX="0.5"/>
                        <RotateTransform CenterY="0.5" CenterX="0.5"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </ImageBrush.RelativeTransform>
            </ImageBrush>
        </Grid.Background>
        
        <Button x:Name="resetbtn" Width="125" Height="40" HorizontalAlignment="Left" VerticalAlignment="Top"  Style="{DynamicResource ButtonStyle2}" Click="resetbtn_Click" >
            <Button.Background>
                <ImageBrush/>
            </Button.Background>
        </Button>

        <DockPanel Height="120" LastChildFill="False" VerticalAlignment="Top">


            
            <StackPanel>
                <Label  Content="RealTime:"  IsHitTestVisible="False"  VerticalAlignment="Top" FontSize="25" Foreground="White" FontFamily="Arial"/>
                <Label x:Name="Realtimetext" IsHitTestVisible="False"  Content="00:00:00"  VerticalAlignment="Top" FontSize="25" FontFamily="Arial" Foreground="White" HorizontalAlignment="Center"/>
            </StackPanel>

            <StackPanel x:Name="Tarkovpanel" DockPanel.Dock="Right" >
                <Label  Content="TarkovTime:"  VerticalAlignment="Top" FontSize="25" Foreground="White" FontFamily="Arial"/>
                <Grid>
                    <StackPanel Orientation="Horizontal">
                        <Rectangle x:Name="hour" Width="55" Focusable="True" PreviewMouseWheel="hour_PreviewMouseWheel" >
                            <Rectangle.Fill>
                                <SolidColorBrush Color="#FFFF0005"/>
                            </Rectangle.Fill>
                            <Rectangle.Style>
                                <Style TargetType="{x:Type Rectangle}">
                                    <Setter Property="Opacity" Value="0"/>

                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Opacity" Value="50"></Setter>
                                        </Trigger>
                                    </Style.Triggers>

                                </Style>
                            </Rectangle.Style>

                        </Rectangle>
                        <Rectangle x:Name="minute" Width="35" Focusable="True" PreviewMouseWheel="minute_PreviewMouseWheel">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="#FFFF0005"/>
                            </Rectangle.Fill>
                            <Rectangle.Style>
                                <Style TargetType="{x:Type Rectangle}">
                                    <Setter Property="Opacity" Value="0"/>

                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Opacity" Value="50"></Setter>
                                        </Trigger>
                                    </Style.Triggers>

                                </Style>
                            </Rectangle.Style>

                        </Rectangle>
                        <Rectangle x:Name="secound" Width="50" Focusable="True" PreviewMouseWheel="secound_PreviewMouseWheel">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="#FFFF0005"/>
                            </Rectangle.Fill>
                            <Rectangle.Style>
                                <Style TargetType="{x:Type Rectangle}">
                                    <Setter Property="Opacity" Value="0"/>

                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Opacity" Value="50"></Setter>
                                        </Trigger>
                                    </Style.Triggers>

                                </Style>
                            </Rectangle.Style>

                        </Rectangle>
                    </StackPanel>
                    <Label x:Name="Tarkovtimetext" IsHitTestVisible="False" Content="00:00:00" HorizontalAlignment="Center"  VerticalAlignment="Top"  FontSize="25" DockPanel.Dock="Right" Foreground="White" FontFamily="Arial" BorderBrush="Black"/>
                </Grid>
                <Label x:Name="Tarkovtime12text" Content="00:00:00" HorizontalAlignment="Center"  VerticalAlignment="Top"  FontSize="25" DockPanel.Dock="Right" Foreground="White" FontFamily="Arial" BorderBrush="Black" Background="#00000000"/>

            </StackPanel>
        </DockPanel>
        <Button x:Name="Exit" Width="40" Height="40" Margin="0,0,1,1" Style="{DynamicResource ButtonStyle1}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Click="Exit_Click" >
            <Button.Background>
                <ImageBrush ImageSource="exit.bmp" Stretch="Uniform"/>
            </Button.Background>
        </Button>
        





    </Grid>
</Window>
